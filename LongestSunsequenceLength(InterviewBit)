// LongestSubsequenceLength
// InterviewBit
// Link-->https://www.interviewbit.com/problems/length-of-longest-subsequence/
// Tag-->DynamicProgramming
// Level-->Easy
// Type-->Longest Increasing Subsequence(LIS)
// Author-> Ritesh Aggarwal

int Solution::longestSubsequenceLength(const vector<int> &a) {
    int n,i,maxi=0,j;
    n=a.size();
    int dp[n];
    int dpD[n];
    for(i=0;i<n;i++)
    {
        dp[i]=1;
        dpD[i]=1;
    }
    for(i=0;i<n;i++)
        for(j=i+1;j<n;j++)
            if(a[j]>a[i])
                dp[j]=max(dp[j],dp[i]+1);
    
    for(i=n-1;i>=0;i--)
        for(j=i-1;j>=0;j--)
            if(a[j]>a[i])
                dpD[j]=max(dpD[j],dpD[i]+1);    
    
    for(i=0;i<n;i++)
    maxi=max(maxi,dp[i]+dpD[i]-1);
    return maxi;
}
